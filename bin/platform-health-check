#!/bin/bash
#

fqdn=$( awk '/5652:ff:fe00:1/{print $2}' /etc/hosts )
HZ=100

_wht="\033[1m"
_red="\033[1;31m"
_grn="\033[1;32m"
_clr="\033[m"
topic() { printf "%-40s" "$@"; }
topic_nl() { printf "%-40s\n" "$@"; }
subtopic() { topic "  $@"; }
white() { printf "$_wht%s$_clr\n" "$@"; }
info() { white "    $@"; }
good() { local msg="${@:-ok}"; printf "$_grn%-10s$_clr\n" "$msg"; }
neut() { local msg="${@:-ok}"; printf "$_wht%-10s$_clr\n" "$msg"; }
bad() { local msg="${@:-failed!}"; printf "$_red%-10s$_clr\n" "$msg"; }
neutral_result() { printf "%-10s\n" "$@"; }
good_if() { local tst=$1 msg=$2; eval "$tst" && good "$msg" || bad "$msg"; }
bad_if() { local tst=$1 msg=$2; ! eval "$tst" && good "$msg" || bad "$msg"; }
good_neut_if() {
  local gtst=$1 ntst=$2 msg=$3
  if eval "$gtst"; then
    good "$msg"
  elif eval "$ntst"; then
    neut "$msg"
  else
    bad "$msg"
  fi
}

ago_str() {
  local secs=$1
  local mins=$(( secs / 60 ))
  local hours=$(( secs / 60 / 60 ))
  local days=$(( secs / 60 / 60 / 24 ))
  if [ "$days" -gt 0 ]; then
    echo "${days}d $(( hours - days * 24 ))h"
  elif [ "$hours" -gt 0 ]; then
    echo "${hours}h $(( mins - hours * 60 ))m"
  elif [ "$mins" -gt 7 ]; then
    echo "${mins}m"
  elif [ "$mins" -gt 0 ]; then
    echo "${mins}m $(( secs - mins * 60 ))s"
  else
    echo "${secs}s"
  fi
}

pid_of() { ps -yelfww | egrep "$@" | awk '{print $3}'; }
check_pid() {
  local pid=$( pid_of "$@" )
  if [ -n "$pid" ]; then
    startticks=$( cat /proc/$pid/stat | cut -d\  -f 22 )
    nowsecs=$( cat /proc/uptime | cut -d. -f 1 )
    secs=$(( nowsecs - ( startticks / $HZ ) ))
    msg="pid $pid, uptime $( ago_str $secs )"
    test "$secs" -lt 86400 && neut "$msg" || good "$msg" # 1 day
  else
    bad "no!"
  fi
}

has_hl7_in() { [[ $fqdn =~ \.[osg]000\. ]]; }
has_hl7_out() { [[ $fqdn =~ \.[osg]000\. ]]; }
has_soap_out() { [[ $fqdn =~ \.o000\. ]]; }
has_http_out() { [[ $fqdn =~ \.g000\. ]]; }


#----------------
topic_nl "Services"
subtopic "MySQL:";    check_pid '[m]ysqld($|[^_])'
subtopic "ActiveMQ:"; check_pid '[D]activemq.home'
subtopic "Karaf:";    check_pid '[k]araf.main.Main'
subtopic "Hyperic:";  check_pid '[o]rg.hyperic.hq.bizapp.agent.client.AgentClient'


#----------------
topic_nl "System"

subtopic "Uptime:"
secs=$( cat /proc/uptime | cut -d. -f 1 )
good_if "test '$secs' -gt 259200" $( ago_str $secs )

subtopic "Memory free (+buffer,cache):"
fbc=$( cat /proc/meminfo | awk ' END {printf "%d", s/1024} /^(MemFree|Buffers|Cached):/{s += $2}' )
good_if "test '$fbc' -gt 400" "$fbc MB"

subtopic "Load (5M):"
load100=$( cat /proc/loadavg | awk '{printf "%d", $2*100}' )
load=$( perl -e "printf('%.2f',$load100/100)" )
good_if "test '$load100' -lt 250" "$load"

if $SANITY_CHECK_IO_WAIT; then
    subtopic "IO Wait:"
    delay=4
    # Sum ticks for all cats, and for io-wait
    io_1=$( cat /proc/stat | awk '/^cpu[0123]/{t += $2+$3+$4+$5+$6+$7+$8; iot+=$6} END {print t, iot}'  )
    sleep $delay
    io_2=$( cat /proc/stat | awk '/^cpu[0123]/{t += $2+$3+$4+$5+$6+$7+$8; iot+=$6} END {print t, iot}'  )
    io_1_ticks=$( echo "$io_1" | cut -d\  -f 1 )
    io_1_ioticks=$( echo "$io_1" | cut -d\  -f 2 )
    io_2_ticks=$( echo "$io_2" | cut -d\  -f 1 )
    io_2_ioticks=$( echo "$io_2" | cut -d\  -f 2 )
    if [ $io_2_ticks = $io_1_ticks ]; then
        neut 0
    else
        iowait=$( perl -e "printf('%d', 100*($io_2_ioticks - $io_1_ioticks)/($io_2_ticks - $io_1_ticks))" )
    fi
    good_if "test '${iowait:-0}' -lt 25" "$iowait"
fi


#----------------
topic_nl "Data"
subtopic "In Queue:"
inq=$( mysql -BN -u root -e 'select count(*) from meddiusmq.ACTIVEMQ_MSGS' )
good_if "test '$inq' -lt 5" "$inq"

subtopic "Deadletter:"
dl=$( mysql -BN -u root -e 'select count(*) from archive.deadletter' )
good_if "test '$dl' -eq 0" "$dl"

# Check karaf log for interesting events
subtopic "Karaf log err/exc (5m):"
startre="(`date -d '5 minutes ago' '+%Y-%m-%d %H:%M:'`|`date -d '4 minutes ago' '+%Y-%m-%d %H:%M:'`|`date -d '3 minutes ago' '+%Y-%m-%d %H:%M:'`)"
counts=$( awk "
  BEGIN {errors=0; hl7in=0; hl7out=0; soapin=0; httpout=0}
  /^$startre/,/^zzz/ {
    if (/ERROR|Exception/) {
      errors += 1
    } else if (/Received a HL7/) {
      hl7in += 1
    } else if (/Sent HL7/) {
      hl7out += 1
    } else if (/Received SOAP1.2/) {
      soapin += 1
    } else if (/HttpLoggingInterceptor.* Sent request/) {
      httpout += 1
    }
  }
  END {print errors, hl7in, hl7out, soapin, httpout}" /opt/server.log )

errors=$( echo "$counts" | cut -d\  -f 1 )
hl7in=$( echo "$counts" | cut -d\  -f 2 )
hl7out=$( echo "$counts" | cut -d\  -f 3 )
soapin=$( echo "$counts" | cut -d\  -f 4 )
httpout=$( echo "$counts" | cut -d\  -f 5 )

good_if "test '$errors' -eq 0" "$errors lines"

if has_hl7_in; then
  subtopic "HL7 in (5m):"
  good_if "test '$hl7in' -gt 5" "$hl7in msgs"
fi
if has_hl7_out; then
  subtopic "HL7 out (5m):"
  good_if "test '$hl7out' -gt 5" "$hl7out msgs"
fi
if has_soap_out; then
  subtopic "SOAP responses (5m):"
  good_if "test '$soapin' -gt 5" "$soapin msgs"
fi
if has_http_out; then
  subtopic "HTTP out (5m):"
  good_if "test '$httpout' -gt 2" "$httpout msgs"
fi

